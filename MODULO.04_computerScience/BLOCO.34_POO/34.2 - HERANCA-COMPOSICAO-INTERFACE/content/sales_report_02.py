# N√≥s queremos estender nosso c√≥digo sem modificar o que j√° existe . Leia o c√≥digo abaixo! Ele faz a mesma coisa que o c√≥digo anterior, mas est√° refatorado. Ele usa, para resolver o nosso problema, os conceitos de classes abstratas, m√©todos abstratos e o conceito de heran√ßa .

from abc import ABC, abstractmethod
import json


class SalesReport(ABC):
    def __init__(self, export_file):
        self.export_file = export_file

    def build(self):
        return [
                { 'Coluna 1': 'Dado 1', 'Coluna 2': 'Dado 2' },
                { 'Coluna 1': 'Dado A', 'Coluna 2': 'Dado B' },
              ]

    @abstractmethod
    def serialize(self):
        raise NotImplementedError


class SalesReportJSON(SalesReport):
    def serialize(self):
        with open(self.export_file + '.json', 'w') as file:
            json.dump(self.build(), file)

# üí° Como boa pr√°tica, cada classe deve ser definida em seu pr√≥prio arquivo! Para nossos exerc√≠cios isso n√£o √© necess√°rio
